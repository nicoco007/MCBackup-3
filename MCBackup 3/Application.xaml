<!--
╔═══════════════════════════════════════════════════════════════════════════╗
║                      Copyright © 2013-2015 nicoco007                      ║
║                                                                           ║
║      Licensed under the Apache License, Version 2.0 (the "License");      ║
║      you may not use this file except in compliance with the License.     ║
║                  You may obtain a copy of the License at                  ║
║                                                                           ║
║                 http://www.apache.org/licenses/LICENSE-2.0                ║
║                                                                           ║
║    Unless required by applicable law or agreed to in writing, software    ║
║     distributed under the License is distributed on an "AS IS" BASIS,     ║
║  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ║
║     See the License for the specific language governing permissions and   ║
║                      limitations under the License.                       ║
╚═══════════════════════════════════════════════════════════════════════════╝
-->
    
<Application x:Class="Application" x:Name="ApplicationXaml"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Converters="clr-namespace:MahApps.Metro.Converters"
    StartupUri="MainWindow.xaml"
ShutdownMode="OnMainWindowClose">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <!-- style for FlatButton that changes color to AccentColor -->
            <Style x:Key="AccentMetroFlatButton" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}" />
                <Setter Property="Padding" Value="10,5,10,5" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border"
                                Margin="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed"
                                     Value="True">
                                    <Setter Property="Background"
                                        Value="{DynamicResource AccentColorBrush3}"
                                        TargetName="Border" />
                                    <Setter Property="Foreground"
                                        Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                     Value="False">
                                    <Setter Property="Foreground"
                                        Value="{DynamicResource GrayBrush2}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                     Value="True">
                                    <Setter Property="Background"
                                        Value="{DynamicResource AccentColorBrush2}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- change RadioButton to FlatButton style -->
            <Style TargetType="RadioButton" x:Key="MetroToggleButton">
                <Setter Property="Background"
                Value="{DynamicResource FlatButtonBackgroundBrush}" />
                <Setter Property="Foreground"
                Value="{DynamicResource FlatButtonForegroundBrush}" />
                <Setter Property="FontSize"
                Value="{DynamicResource FlatButtonFontSize}" />
                <Setter Property="Padding"
                Value="10,5,10,5" />
                <Setter Property="BorderThickness"
                Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Border x:Name="Border"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed"
                                 Value="True">
                                    <Setter Property="Background"
                                    Value="{DynamicResource FlatButtonPressedBackgroundBrush}"
                                    TargetName="Border" />
                                    <Setter Property="Foreground"
                                    Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="False">
                                    <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush2}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                 Value="True">
                                    <Setter Property="Background"
                                    Value="DarkGray" />
                                </Trigger>
                                <Trigger Property="IsChecked"
                                 Value="True">
                                    <Setter Property="Background"
                                    Value="{DynamicResource GrayBrush3}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Color selection slider (like in Paint) -->
            <SolidColorBrush x:Key="ThumbBackgroundBrush" Color="#FF777777"/>
            <SolidColorBrush x:Key="ThumbBorderBrush" Color="#FF000000"/>
            <SolidColorBrush x:Key="ThumbBackgroundBrushHover" Color="#FFBBBBBB"/>
            <SolidColorBrush x:Key="ThumbBorderBrushHover" Color="#FF000000"/>
            <SolidColorBrush x:Key="ThumbBackgroundBrushActive" Color="#FF222222"/>
            <SolidColorBrush x:Key="ThumbBorderBrushActive" Color="#FF000000"/>

            <Style x:Key="ColorSelectionSliderThumb" TargetType="{x:Type Thumb}">
                <Setter Property="Background" Value="{StaticResource ThumbBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ThumbBorderBrush}"/>

                <Setter Property="OverridesDefaultStyle" Value="True"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid>
                                <Polygon Points="0,18 5,10 10,18" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource ThumbBackgroundBrushHover}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource ThumbBorderBrushHover}"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="True">
                        <Setter Property="Background" Value="{StaticResource ThumbBackgroundBrushActive}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource ThumbBorderBrushActive}"/>
                    </Trigger>
                </Style.Triggers>
                    
            </Style>

            <Style x:Key="ColorSelectionSlider" TargetType="{x:Type Slider}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Track x:Name="PART_Track" Grid.Row="1">
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource ColorSelectionSliderThumb}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
        <!--
            <SolidColorBrush x:Key="ThumbBackgroundBrush" Color="#FF404040"/>
            <SolidColorBrush x:Key="ThumbBorderBrush" Color="#FFB0B0B0"/>
            <SolidColorBrush x:Key="ThumbBackgroundBrushActive" Color="#FF0000FF"/>
            <SolidColorBrush x:Key="ThumbBorderBrushActive" Color="#FFFFFFFF"/>
            
            <Style x:Key="ColorSelectionSliderThumb" TargetType="{x:Type Thumb}">
                <Setter Property="Background" Value="{StaticResource ThumbBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ThumbBorderBrush}"/>
                
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid>
                                <Polygon Points="0,18 5,10 10,18" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource ThumbBackgroundBrushActive}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource ThumbBorderBrushActive}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ColorSelectionSlider" TargetType="{x:Type Slider}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Track x:Name="PART_Track" Grid.Row="1">
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource ColorSelectionSliderThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TabItem"
           x:Key="SmallTabItem">
                <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
                <Setter Property="IsTabStop"
                Value="False" />
                <Setter Property="Padding"
                Value="6,2,6,2" />
                <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
                <Setter Property="MinWidth"
                Value="5" />
                <Setter Property="MinHeight"
                Value="5" />
                <Setter Property="BorderThickness"
                Value="0" />
                <Setter Property="BorderBrush"
                Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Background"
                Value="Transparent" />
                <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
                <Setter Property="SnapsToDevicePixels"
                Value="True" />
                <Setter Property="Controls:ControlsHelper.HeaderFontSize"
                Value="12" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="Border"
                            Margin="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter x:Name="ContentSite"
                                          Margin="2,1,2,1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.FontSize="12"
                                          TextElement.FontStretch="{TemplateBinding Controls:ControlsHelper.HeaderFontStretch}"
                                          TextElement.FontWeight="{TemplateBinding Controls:ControlsHelper.HeaderFontWeight}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected"
                                 Value="true">
                                    <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="{DynamicResource AccentColorBrush}" />
                                </Trigger>
                                <Trigger Property="IsSelected"
                                 Value="false">
                                    <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="{DynamicResource GrayNormalBrush}" />
                                </Trigger>
                                <Trigger SourceName="ContentSite"
                                 Property="IsMouseOver"
                                 Value="True">
                                    <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="{DynamicResource GrayHoverBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="MetroIconButton" BasedOn="{StaticResource MetroFlatButton}">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="Orange" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MetroFlatButton2" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}" />
                <Setter Property="Padding" Value="10,5,10,5" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed"
                                 Value="True">
                                    <Setter Property="Background"
                                    Value="{DynamicResource AccentColorBrush3}"
                                    TargetName="Border" />
                                    <Setter Property="Foreground"
                                    Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="False">
                                    <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush2}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                 Value="True">
                                    <Setter Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>-->
    </Application.Resources>
</Application>
